#! /usr/bin/env bash

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

CATKIN_TOOLS_DOCUMENT_CONFIG_FILE="$DIR"/catkin_tools_document_config.yaml
export CATKIN_TOOLS_DOCUMENT_CONFIG_FILE

# Function to generate doucmentation of current workspace
function tue-make-documentation
{
    if [ -n "$TUE_ROS_DISTRO" ] && [ -d "$TUE_SYSTEM_DIR" ]
    then
        local build_tool=""
        if [ -f "$TUE_SYSTEM_DIR"/devel/.built_by ]
        then
            build_tool=$(cat "$TUE_SYSTEM_DIR"/devel/.built_by)
        fi
        case $build_tool in
        'catkin build')
            catkin document --workspace "$TUE_SYSTEM_DIR" "$@"
            ;;
        '')
            catkin config --init --mkdirs --workspace "$TUE_SYSTEM_DIR" --extend /opt/ros/"$TUE_ROS_DISTRO" -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCATKIN_ENABLE_TESTING=OFF
            catkin build --workspace "$TUE_SYSTEM_DIR" "$@"
            touch "$TUE_SYSTEM_DIR"/devel/.catkin # hack to allow overlaying to this ws while being empty
            ;;
        *)
            echo -e "\e$build_tool is not supported (anymore), use catkin tools\e[0m"
            return 1
            ;;
        esac
    fi
}
export -f tue-make-documentation

# Use complete function of tue-make
complete -F _tue-make tue-make-documentation

# Export docs path to open with desiserd browser
TUE_DOCS_PATH="$TUE_SYSTEM_DIR"/docs/index.html
export TUE_DOCS_PATH
